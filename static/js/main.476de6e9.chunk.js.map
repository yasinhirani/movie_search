{"version":3,"sources":["Movie.js","Errormsg.js","App.js","index.js"],"names":["Movie","props","className","src","image","alt","title","about","actors","director","writer","awards","genre","language","boxoffice","imdbrating","imdbvotes","release","Errormsg","App","useState","movie","setMovie","search","setSearch","query","setQuery","useEffect","getMovie","a","myUrl","fetch","response","json","data","console","log","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Title","Actors","BoxOffice","Genre","imdbRating","imdbVotes","Released","Awards","Plot","Language","Writer","Director","Poster","ReactDOM","render","document","getElementById"],"mappings":"mPAwBeA,EArBD,SAACC,GACX,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAmBC,IAAKF,EAAMG,MAAOC,IAAI,KACxD,oBAAIH,UAAU,UAAd,SAAyBD,EAAMK,QAC/B,oBAAGJ,UAAU,UAAb,cAAyBD,EAAMM,MAA/B,OACA,oBAAGL,UAAU,UAAb,UAAuB,wCAAvB,IAAuCD,EAAMO,UAC7C,oBAAGN,UAAU,UAAb,UAAuB,0CAAvB,IAAyCD,EAAMQ,SAA/C,OACA,oBAAGP,UAAU,UAAb,UAAuB,wCAAvB,IAAuCD,EAAMS,OAA7C,OACA,oBAAGR,UAAU,UAAb,UAAuB,wCAAvB,IAAuCD,EAAMU,OAA7C,OACA,oBAAGT,UAAU,UAAb,UAAuB,uCAAvB,IAAsCD,EAAMW,MAA5C,OACA,oBAAGV,UAAU,UAAb,UAAuB,0CAAvB,IAAyCD,EAAMY,SAA/C,OACA,oBAAGX,UAAU,UAAb,UAAuB,4CAAvB,IAA2CD,EAAMa,UAAjD,OACA,oBAAGZ,UAAU,UAAb,UAAuB,4CAAvB,IAA2CD,EAAMc,WAAjD,OACA,oBAAGb,UAAU,UAAb,UAAuB,2CAAvB,IAA0CD,EAAMe,UAAhD,OACA,oBAAGd,UAAU,UAAb,UAAuB,8CAAvB,IAA6CD,EAAMgB,QAAnD,aCPDC,EATE,SAACjB,GACd,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKA,UAAU,aAAf,SACI,oBAAIA,UAAU,UAAd,mC,MCwCDiB,MA1Cf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGeF,mBAAS,IAHxB,mBAGNG,EAHM,KAGEC,EAHF,OAIaJ,mBAAS,IAJtB,mBAINK,EAJM,KAICC,EAJD,KAMbC,qBAAU,WACRC,MACA,CAACH,IAEH,IAAMG,EAAQ,uCAAE,gCAAAC,EAAA,6DACRC,EADQ,oDAC6CL,GAD7C,SAESM,MAAMD,GAFf,cAERE,EAFQ,gBAGKA,EAASC,OAHd,OAGRC,EAHQ,OAIdZ,EAASY,GACTC,QAAQC,IAAIF,GALE,2CAAF,qDAQd,OACE,sBAAKhC,UAAU,MAAf,UACE,uBAAMmC,SAAU,SAACC,GACjBA,EAAEC,iBACFb,EAASH,IAFT,UAIA,kDACA,sBAAKrB,UAAU,aAAf,UACA,uBAAOsC,KAAK,SAASC,YAAY,sBAAsBC,MAAOnB,EAAQoB,SAAU,SAACL,GAAOd,EAAUc,EAAEM,OAAOF,UAC3G,wBAAQF,KAAK,SAAb,0BAIEf,EAAS,cAAC,EAAD,CAAOnB,MAAOe,EAAMwB,MAAOrC,OAAQa,EAAMyB,OAAQhC,UAAWO,EAAM0B,UAAWnC,MAAQS,EAAM2B,MAClGjC,WAAYM,EAAM4B,WAAYjC,UAAWK,EAAM6B,UAAWjC,QAASI,EAAM8B,SAAUxC,OAAQU,EAAM+B,OACjG7C,MAAOc,EAAMgC,KAAMxC,SAAUQ,EAAMiC,SAAU5C,OAAQW,EAAMkC,OAAQ9C,SAAUY,EAAMmC,SAAUpD,MAAOiB,EAAMoC,SAExG,cAAC,EAAD,QCnCZC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.476de6e9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Movie.css'\r\n\r\nconst Movie = (props) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"movie-card\">\r\n                <img className=\"p-class img-main\" src={props.image} alt=\"\"/>\r\n                <h1 className=\"p-class\">{props.title}</h1>\r\n                <p className=\"p-class\"> {props.about} </p>\r\n                <p className=\"p-class\"><u>Actors:</u> {props.actors}</p>\r\n                <p className=\"p-class\"><u>Director:</u> {props.director} </p>\r\n                <p className=\"p-class\"><u>Writer:</u> {props.writer} </p>\r\n                <p className=\"p-class\"><u>Awards:</u> {props.awards} </p>\r\n                <p className=\"p-class\"><u>Genre:</u> {props.genre} </p>\r\n                <p className=\"p-class\"><u>Language:</u> {props.language} </p>\r\n                <p className=\"p-class\"><u>Box office:</u> {props.boxoffice} </p>\r\n                <p className=\"p-class\"><u>imdbrating:</u> {props.imdbrating} </p>\r\n                <p className=\"p-class\"><u>imdbvotes:</u> {props.imdbvotes} </p>\r\n                <p className=\"p-class\"><u>release year:</u> {props.release} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Movie;","import React from 'react';\r\nimport './Movie.css'\r\n\r\nconst Errormsg = (props) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <div className=\"movie-card\">\r\n                <h1 className=\"p-class\">Enter movie name</h1>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Errormsg;","import React, {useState,useEffect} from 'react';\nimport Movie from './Movie';\nimport Errormsg from './Errormsg';\nimport './App.css';\n\nfunction App() {\n\n  const [movie, setMovie] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getMovie();\n  },[query]);\n  \n  const getMovie =async () =>{\n    const myUrl = `https://www.omdbapi.com/?apikey=2731c05&t=${query}`;\n    const response = await fetch(myUrl);\n    const data = await response.json();\n    setMovie(data);\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={(e) => {\n      e.preventDefault();\n      setQuery(search);\n    }}>\n      <h1>Movie Database  </h1>\n      <div className=\"search-bar\">\n      <input type=\"search\" placeholder=\"Enter movie name...\" value={search} onChange={(e) => {setSearch(e.target.value)}}/>\n      <button type=\"submit\">search</button>\n      </div>\n      </form>\n      {\n        query ? (<Movie title={movie.Title} actors={movie.Actors} boxoffice={movie.BoxOffice} genre ={movie.Genre}\n          imdbrating={movie.imdbRating} imdbvotes={movie.imdbVotes} release={movie.Released} awards={movie.Awards}\n          about={movie.Plot} language={movie.Language} writer={movie.Writer} director={movie.Director} image={movie.Poster}/>) \n          : (\n            <Errormsg />\n          )\n      } \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}